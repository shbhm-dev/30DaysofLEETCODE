class Solution {
public:
   int binaryS(vector<int>& nums, int s, int e, int t){
       if(s<=e){
           int m = (s+e)/2;
           if(nums[m] == t)
               return m;
           else if(nums[m] > t)
               return binaryS(nums, s, m-1, t);
           else
               return binaryS(nums, m+1, e, t);
       }
       return -1;
   }
    
   int findE(vector<int> nums,int s,int e,int target)
   {
    while(s<=e)
    {
        int mid  = (s+e)/2;
        
        if(nums[mid]==target)
            return mid;
        
        
        if(nums[s]<=nums[mid])
        {
           
            if(target >= nums[s] && target <= nums[mid])
            {
                return binaryS(nums,s,mid,target);
            }
                 
               return  findE(nums,mid+1,e,target);
            
        }
        else
        {
           
            if(target <= nums[e] && target>= nums[mid])
       
                return binaryS(nums,mid,e,target);
            
   
              return  findE(nums,s,mid-1,target);
        }
  
    }
       
return -1;
   }
    
       

    int search(vector<int>& nums, int target) {
        
        if(nums.size()==0)
            return -1;
     
        return findE(nums,0,nums.size()-1,target);
        
    }
};